/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames_internos;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import Datos.p_reserva;
import Interface.Modulos;
import com.itextpdf.text.Font;
import com.itextpdf.text.pdf.PdfReader;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Jose
 */
public class frm_finalizacion extends javax.swing.JInternalFrame implements Modulos {

    boolean datos_completos = false;
    p_reserva reserva;

    public frm_finalizacion(p_reserva r) {
        initComponents();
        this.setSize(605, 444);
        this.setTitle("Imprimir Ticket");
        this.reserva = r;
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_imprimir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        getContentPane().setLayout(null);

        btn_imprimir.setBackground(new java.awt.Color(0, 153, 0));
        btn_imprimir.setForeground(new java.awt.Color(255, 255, 255));
        btn_imprimir.setText("Imprimir");
        btn_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imprimirActionPerformed(evt);
            }
        });
        getContentPane().add(btn_imprimir);
        btn_imprimir.setBounds(256, 176, 112, 43);

        jLabel1.setText("¡Exito! Tus tickets estan listos | ¡Buen viaje!");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 30, 409, 53);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(-16, 81, 620, 10);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imprimirActionPerformed
        datos_completos = true;
        crear_pdf(reserva.getDetalle_reserva().getAsientos());
    }//GEN-LAST:event_btn_imprimirActionPerformed

    public void escribir_fichero() throws FileNotFoundException {

        File bloc = new File("Tickets.txt");

        try {

            FileReader lee_bloc = new FileReader(bloc);
            BufferedReader texto = new BufferedReader(lee_bloc);

            String datos = texto.readLine();

            try (FileWriter bloc_nuevo = new FileWriter(bloc, true)) {
                bloc_nuevo.write(datos + "\r\n"
                        + "\nNOMBRES: " + reserva.getCliente().getNombre()
                        + "\nDESTINO: " + reserva.getDetalle_reserva().getDestino()
                        + "\nFECHA DE VIAJE: " + reserva.getFecha().getDia() + "/" + reserva.getFecha().getMes() + "/" + reserva.getFecha().getAno()
                        + "\nCLASE DE VIAJE: " + reserva.getDetalle_reserva().getClase()
                        + "\nNRO DE ASIENTOS: " + reserva.getDetalle_reserva().getAsientos()
                        + "\nTIPO DE PAGO: " + reserva.getPago().getTipo_pago()
                        + "\nTRANSACCION ID: " + reserva.getPago().getId_transaccion()
                        + "\nCANTIDAD: : " +reserva.getPago().getCant_pago()
                );
            }
        } catch (IOException e) {
            System.out.print("No se pudo escribir");
        }
    }

    public void crear_pdf(int tamano) {

        try {
            Document documento = new Document(); //para crear el pdf
            FileOutputStream doc_pdf = new FileOutputStream("Ticket " + reserva.getCliente().getNombre() + ".pdf"); //fichero de creacion
            PdfWriter.getInstance(documento, doc_pdf); //asociamos el documento
            documento.open(); //abrimos el pdf para escribir
            
            Font fuente_titulo=new Font(Font.FontFamily.HELVETICA,16,Font.BOLD,BaseColor.DARK_GRAY);
            Font fuente_sub=new Font(Font.FontFamily.HELVETICA,14,Font.NORMAL,BaseColor.DARK_GRAY);
            Font fuente_txt=new Font(Font.FontFamily.COURIER,14,Font.NORMAL,BaseColor.BLACK);
            Paragraph titulo = new Paragraph("Tickets De Boletos Aereos\n\n",fuente_titulo);            
            titulo.setAlignment(1);
            documento.add(titulo); //titulo para el documento
            

            PdfPTable tabla;

            for (int i = 0; i < tamano; i++) {
                documento.add(new Paragraph("\n\tBoleto Nro "+(i+1)+"\n\n",fuente_sub));
                 tabla= new PdfPTable(2);
                tabla.addCell(new Paragraph("NOMBRES: ",fuente_txt));
                tabla.addCell(new Paragraph(reserva.getCliente().getNombre(),fuente_txt));
                tabla.addCell(new Paragraph("DESTINO: ",fuente_txt));
                tabla.addCell(new Paragraph(reserva.getDetalle_reserva().getDestino(),fuente_txt));
                tabla.addCell(new Paragraph("FECHA DE VIAJE: ",fuente_txt));
                tabla.addCell(new Paragraph(reserva.getFecha().getDia() + "/" + reserva.getFecha().getMes() + "/" + reserva.getFecha().getAno(),fuente_txt));
                tabla.addCell(new Paragraph("CLASE DE VIAJE: ",fuente_txt));
                tabla.addCell(new Paragraph(reserva.getDetalle_reserva().getClase(),fuente_txt));
                tabla.addCell(new Paragraph("NRO DE ASIENTOS: ",fuente_txt));
                tabla.addCell(new Paragraph("" + reserva.getDetalle_reserva().getAsientos(),fuente_txt));
                tabla.addCell(new Paragraph("TIPO DE PAGO: ",fuente_txt));
                tabla.addCell(new Paragraph(reserva.getPago().getTipo_pago(),fuente_txt));
                tabla.addCell(new Paragraph("TRANSACCION ID: ",fuente_txt));
                tabla.addCell(new Paragraph(reserva.getPago().getId_transaccion(),fuente_txt));
                tabla.addCell(new Paragraph("CANTIDAD: ",fuente_txt));
                tabla.addCell(new Paragraph("S/." +reserva.getPago().getCant_pago(),fuente_txt));
                documento.add(tabla); //añadimos la tabla
            }

            
            documento.close(); //cerramos la tabla
            escribir_fichero();
            abrir_pdf();

        } catch (DocumentException | FileNotFoundException ex) {
            Logger.getLogger(frm_finalizacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void abrir_pdf() {
        try {
            File doc = new File("Ticket " + reserva.getCliente().getNombre() + ".pdf");
            Desktop.getDesktop().open(doc);

        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_imprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    public boolean esta_completo() {
        return datos_completos;
    }
}
